package shoppingcart2;
import java.io.File;
import java.io.FileNotFoundException;
import javafx.application.Application;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.VBox;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javax.swing.*;
import java.awt.List;
import java.text.DecimalFormat;
import java.util.Scanner;
 
 
public class ShoppingCart2 extends Application
{
    private Label answer;
    private Label price;
    ListView <String> listView;
    private String[] listArray = new String[7];
    private List cartItems = new List();
    //int cartItems = 0;
 
    private final double salesTax = 0.07;
 
    public static void main(String[] args) throws FileNotFoundException
    {
        launch(args);
    }
 
    @Override
    public void start(Stage primaryStage) throws FileNotFoundException
    {
        answer = new Label("Price: ");
        price = new Label("");
        String line;
        int index = 0;
        File file = new File("BookPrices.txt");
        Scanner fileReader = new Scanner(file);
 
        while (fileReader.hasNext())
        {
            line = fileReader.nextLine();
            String[] titles = line.split(",");
            listArray[index] = titles[0];
            index++;
        }
        //list view items book
        listView = new ListView < > ();
        listView.setPrefSize(200, 170);
        listView.getItems().addAll(listArray);
        
        // create label to display the selection
        Label selectedNameLabel = new Label("Select a Book");
        Label price = answer;
 
        //Button for selection
        Button addButton = new Button("Add to Cart");
        addButton.setOnAction(new AddButtonListener());
 
        //Delete button
        Button removeButton = new Button("Remove Item");
        removeButton.setOnAction(new RemoveButtonListener());
 
        //Controls to VBox
        VBox vbox = new VBox(10, listView, selectedNameLabel,
                price, addButton, removeButton);
        vbox.setPadding(new Insets(10));
        vbox.setAlignment(Pos.CENTER);
 
        //Show
        Scene scene = new Scene(vbox);
        primaryStage.setScene(scene);
        primaryStage.show();
    }
 
    // Add button
    public class AddButtonListener implements EventHandler < ActionEvent >
    {
        @Override
        public void handle(ActionEvent e)
        {
 
            //String value;
            //value = (String) listItems.getSelectedValue();
            String value = listView.getSelectionModel().getSelectedItem();
            cartItems.add(value);
            answer.setText("Price: " + Calc());
        }
 
    }
    // Subtract Button
    public class RemoveButtonListener implements EventHandler < ActionEvent >
    {
 
        @Override
        public void handle(ActionEvent e)
        {
            // String value;
            //value = (String) listItems.getSelectedValue();
            String value = listView.getSelectionModel().getSelectedItem();
            try {
                cartItems.remove(value);
                answer.setText("Price: " + Calc());
            }
            catch (IllegalArgumentException ex) {
                //do nothing
            }
        }
    }
 
    // Button Calculations
    private String Calc() {
        String line;
        double totalCost = 0.0, costOfItem = 0.0;
        File file = new File("BookPrices.txt");
        Scanner fileReader = null;
        try
        {
            fileReader = new Scanner(file);
        }
        catch (FileNotFoundException el)
        {
            el.printStackTrace();
        }
 
        while (fileReader.hasNextLine())
        {
            line = fileReader.nextLine();
            String[] cost = line.split(",");
 
            String title = cost[0];
            costOfItem = Double.parseDouble(cost[1]);
 
            for (int i = 0; i < cartItems.getItemCount(); i++)
            {
                if (title.equals(cartItems.getItem(i)))
                    totalCost += costOfItem;
            }
        }
 
        DecimalFormat myFormatter = new DecimalFormat("###.##");
 
        return myFormatter.format((salesTax * totalCost) + totalCost).toString();
    }
}
